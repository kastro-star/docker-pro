# Use a multi-stage build for optimization
# Stage 1: Build the React frontend
FROM node:18 AS frontend

WORKDIR /app/frontend
COPY frontend/package.json frontend/package-lock.json ./
RUN npm install
COPY frontend ./
RUN npm run build

# Stage 2: Build the FastAPI backend
FROM python:3.10

WORKDIR /app

# Copy backend dependencies
COPY backend/requirements.txt ./

# Install dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy the backend source code
COPY backend ./

# Expose the port for FastAPI
EXPOSE 8000

# Set environment variables for API keys (replace with actual values or use Docker secrets)  
ENV OPENAI_API_KEY=your_openai_key_here    
ENV QDRANT_API_KEY=your_qdrant_key_here
ENV DATABASE_URL=postgresql://user:password@postgres:5432/dbname

# Run the FastAPI application
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]

# Stage 3: Final image with Nginx as a reverse proxy
FROM nginx:alpine

COPY --from=frontend /app/frontend/build /usr/share/nginx/html

# Copy the Nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
